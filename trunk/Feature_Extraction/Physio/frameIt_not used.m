function   frameIt( file, label )
%frameIt Makes chuncks, calulates features and produces FP map
%   All processing for a single file containing ECG and EMG
% broken in fucntions that can be used later on for simulink or other
% implementations

% read global parameters
config;

% Create directories for chunks
mkdir(fullfile(processingPath,'ecg'));
mkdir(fullfile(processingPath,'emg'));
mkdir(fullfile(processingPath,'sc'));

%open(fullfile(physioPath,file);
importfile(Sample_experiment_date/Physio/Raw/rafaS001R01.mat);

ecgSignal = data(:,7);
emgSignal = data(:,8);

chunkIt(ecgSignal);
chunkIt(emgSignal);

createIndex();

createLabels(); % this should be just one label 
                 % (the one corresponding to the file)
% extract features


% calculate map
aubt_fisherPlot(featmat,labels,c,3,labelnames);

end


function importfile(fileToRead1)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

    %  Auto-generated by MATLAB on 22-Apr-2009 01:28:00

    % Import the file
    newData1 = importdata(fileToRead1);

    % Create new variables in the base workspace from those fields.
    vars = fieldnames(newData1);
    for i = 1:length(vars)
        assignin('base', vars{i}, newData1.(vars{i}));
    end

end

function   chunkIt( data )
% data: a column with the data for the individual signal
% saves teh files in chunks for aubt to use.

    % create chunks
     hz = 1000/isi;

    % Window initialisation%
    windowsize = hz * windowlength; %Windowsize is in seconds

    % Set window spacing
    windowspacing = floor(((length(data) - (leadin + leadout)*hz) - windowsize + 1)/numberofwindows); % calculates the appropriate spacing for n windows, end of data may not be used.

    start = leadin + 1; %Intialises the original window to start at first data point.
    numb = emotion;     %% Sets the emotion number, allowing stepping through the appropriate numbers when creating the signal files, eg anger will be given ecg1, then ecg9 etc...
    count = 0;

    for h = 1 : 1 : numberofwindows,
        stnum = num2str(numb);

        for sig = 1:1:3 % for each window, runs through once for each signal
            if sig == 1
                sigtype = 'ecg';
            elseif sig == 2
                sigtype = 'emg';
            elseif sig == 3
                sigtype = 'sc';
            end
            file = strcat(sigtype,stnum,'.mat'); %creates the file save name.
            ffile = fullfile(processingPath, sigtype,file);
          %  disp ffile
            allfiles{sig,numb} = ffile; % 3*n array each row represents one signal type, eg emg.
            signal = data(start:1:(start+(windowsize-1)),sig); % applies the window over the original data and copies to 'signal'
            save(ffile, 'signal', 'hz') % Saves the selection and its sample rate.
        end
        % Counters
        start = start + windowspacing; % Moving window start counter
        numb = numb + 8; % Signal number counter (emotion specific)
        count = count + 1; % Counter for labels.mat, probably unnecessary, likely related to 'numberofwindows'
    end

end


function createLabels        
%Creates the 'labels.mat' variable file
%mklabels(count); %% This function creates the file labels.mat
%% This function creates the .mat file labels, which is used to denote
%% which data stub belongs to which emotion group.

    labelnames = {'anger';'grief';'hate';'joy';'noemotion';'platonic';'reverence';'romantic'};
    labels = [];
    for n = 1:1:(count)
        labels = [labels;((1:8)')];
    end
    save(fullfile(processingPath, 'labels'),'labels','labelnames')
    %-------------------------------------%

end

 
function createIndex()
%Collects all the signal file numbers and saves 'signal-files.mat'
%mkfiles(allfiles,hz);%% This function makes the list files, ecg-files.mat, etc..
    for n = 1:1:3
        if n == 1
            name = 'ecg';
            files = {allfiles{1,:}};
            save(fullfile(processingPath,'ecg-files'),'files','hz','name')
        elseif n == 2
            name = 'emg';
            files = {allfiles{2,:}};
            save(fullfile(processingPath,'emg-files'),'files','hz','name')
        elseif n == 3
            name = 'sc';
            files = {allfiles{3,:}};
            save(fullfile(processingPath, 'sc-files'),'files','hz','name')
        end
    end

  end